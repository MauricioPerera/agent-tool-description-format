[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "atdf"
version = "0.1.0"
description = "Agent Tool Description Format - Standardized format for AI agent tools"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "ATDF Team", email = "team@atdf.dev"}
]
keywords = ["ai", "agents", "tools", "mcp", "standardization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7,<9",
    "pytest-cov>=4.1,<6",
    "pytest-asyncio>=0.21,<0.24",
    "pytest-mock>=3.12,<4",
    "black==24.8.0",
    "isort>=5.13,<6",
    "flake8>=6.1,<7",
    "mypy>=1.10,<2",
    "bandit>=1.7,<2",
    "safety>=2.3,<3",
    "coverage[toml]>=7.6,<8",
    "pre-commit>=3.6,<4",
]
vector = [
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/atdf/agent-tool-description-format"
Documentation = "https://atdf.dev/docs"
Repository = "https://github.com/atdf/agent-tool-description-format"
"Bug Tracker" = "https://github.com/atdf/agent-tool-description-format/issues"

# Black configuration
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
/( 
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
  | js
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["atdf", "sdk", "tools", "examples"]
known_third_party = ["fastapi", "pydantic", "uvicorn", "httpx", "pytest"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v -ra --strict-markers --strict-config --cov=sdk --cov=tools --cov=examples --cov-report=xml --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["sdk", "tools", "examples"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "thefuzz.*",
    "Levenshtein.*",
    "sklearn.*",
    "numpy.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "examples.*",
    "tools.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "sdk.atdf_sdk",
    "sdk.examples",
    "sdk.examples.*",
    "sdk.vector_search.*",
    "sdk.vector_search_cli",
    "improved_loader",
]
ignore_errors = true
[project.scripts]
atdf = "cli.__init__.main:cli"
