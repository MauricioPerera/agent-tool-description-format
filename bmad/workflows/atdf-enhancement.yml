# ATDF Enhancement Workflow
# BMAD-METHOD Workflow for Agent Tool Description Format Development

name: "atdf_enhancement"
version: "1.0.0"
description: "Comprehensive workflow for enhancing ATDF with new features and capabilities"
domain: "ai-agent-tools"
framework: "bmad-method"

# Workflow Metadata
metadata:
  created_by: "BMAD Orchestrator"
  created_date: "2024-01-20"
  last_updated: "2024-01-20"
  project: "ATDF v2.0 Enhancement"
  complexity: "high"
  estimated_duration: "4-6 weeks"
  success_criteria:
    - "New ATDF features implemented and tested"
    - "90%+ test coverage maintained"
    - "Documentation updated and complete"
    - "Community feedback incorporated"
    - "Backwards compatibility preserved"

# Workflow Configuration
config:
  parallel_execution: true
  quality_gates: true
  auto_progression: false
  rollback_enabled: true
  notification_channels: ["slack", "email"]
  
# Agent Assignments
agents:
  primary:
    - name: "atdf_specialist"
      role: "Technical Lead"
      responsibility: "ATDF domain expertise and technical guidance"
    - name: "architect"
      role: "System Designer"
      responsibility: "Architecture design and integration patterns"
    - name: "developer"
      role: "Implementation Lead"
      responsibility: "Code implementation and testing"
  
  supporting:
    - name: "analyst"
      role: "Research & Analysis"
      responsibility: "Market research and requirements analysis"
    - name: "pm"
      role: "Project Coordinator"
      responsibility: "Timeline management and stakeholder coordination"
    - name: "qa"
      role: "Quality Assurance"
      responsibility: "Testing, validation, and quality metrics"

# Workflow Phases
phases:
  
  # Phase 1: Planning & Analysis
  planning:
    name: "Planning & Requirements Analysis"
    duration: "1 week"
    parallel: false
    
    tasks:
      - id: "P1"
        name: "Market Research & Analysis"
        agent: "analyst"
        description: "Research current tool description standards and identify enhancement opportunities"
        deliverables:
          - "market_analysis_report.md"
          - "competitive_analysis.json"
          - "adoption_metrics.csv"
        tools:
          - "research_tool_standards"
          - "analyze_adoption_metrics"
        dependencies: []
        estimated_hours: 16
        
      - id: "P2"
        name: "Requirements Gathering"
        agent: "pm"
        description: "Gather and document requirements for ATDF enhancements"
        deliverables:
          - "requirements_document.md"
          - "user_stories.yml"
          - "acceptance_criteria.json"
        tools:
          - "create_atdf_requirements"
          - "gather_stakeholder_feedback"
        dependencies: ["P1"]
        estimated_hours: 12
        
      - id: "P3"
        name: "Current Schema Analysis"
        agent: "atdf_specialist"
        description: "Analyze current ATDF schema for improvement opportunities"
        deliverables:
          - "schema_analysis_report.md"
          - "improvement_recommendations.json"
          - "compatibility_matrix.csv"
        tools:
          - "analyze_atdf_schema"
          - "validate_schema_compliance"
        dependencies: []
        estimated_hours: 20
        
    quality_gates:
      - name: "Requirements Approval"
        criteria:
          - "All stakeholder requirements documented"
          - "Technical feasibility confirmed"
          - "Resource allocation approved"
        approvers: ["pm", "atdf_specialist"]
        
  # Phase 2: Design & Architecture
  design:
    name: "Design & Architecture"
    duration: "1.5 weeks"
    parallel: true
    
    tasks:
      - id: "D1"
        name: "Schema Design"
        agent: "architect"
        description: "Design enhanced ATDF schema with new features"
        deliverables:
          - "enhanced_schema_design.json"
          - "schema_migration_plan.md"
          - "validation_rules.yml"
        tools:
          - "design_atdf_schema"
          - "create_validation_rules"
        dependencies: ["P2", "P3"]
        estimated_hours: 24
        
      - id: "D2"
        name: "Integration Architecture"
        agent: "architect"
        description: "Design integration patterns for new ATDF features"
        deliverables:
          - "integration_architecture.md"
          - "api_specifications.yml"
          - "compatibility_layer.json"
        tools:
          - "design_integration_architecture"
          - "create_api_specifications"
        dependencies: ["P1", "P3"]
        estimated_hours: 20
        
      - id: "D3"
        name: "Error Handling Design"
        agent: "atdf_specialist"
        description: "Design enhanced error handling and response patterns"
        deliverables:
          - "error_handling_design.md"
          - "error_response_templates.json"
          - "error_recovery_patterns.yml"
        tools:
          - "design_error_responses"
          - "create_error_templates"
        dependencies: ["P3"]
        estimated_hours: 16
        
    quality_gates:
      - name: "Design Review"
        criteria:
          - "Architecture approved by technical team"
          - "Schema design validates against requirements"
          - "Integration patterns documented"
        approvers: ["architect", "atdf_specialist", "developer"]
        
  # Phase 3: Implementation
  implementation:
    name: "Development & Implementation"
    duration: "2 weeks"
    parallel: true
    
    tasks:
      - id: "I1"
        name: "Schema Implementation"
        agent: "developer"
        description: "Implement enhanced ATDF schema and validation"
        deliverables:
          - "schema_validator.py"
          - "schema_parser.py"
          - "migration_utilities.py"
        tools:
          - "generate_atdf_implementation"
          - "create_validation_code"
        dependencies: ["D1"]
        estimated_hours: 32
        
      - id: "I2"
        name: "Integration Development"
        agent: "developer"
        description: "Implement integration adapters and compatibility layers"
        deliverables:
          - "integration_adapters.py"
          - "compatibility_layer.py"
          - "api_endpoints.py"
        tools:
          - "generate_integration_code"
          - "create_api_endpoints"
        dependencies: ["D2"]
        estimated_hours: 28
        
      - id: "I3"
        name: "Error Handling Implementation"
        agent: "developer"
        description: "Implement enhanced error handling system"
        deliverables:
          - "error_handler.py"
          - "error_response_generator.py"
          - "error_recovery_system.py"
        tools:
          - "implement_error_handling"
          - "create_error_responses"
        dependencies: ["D3"]
        estimated_hours: 24
        
      - id: "I4"
        name: "SDK Updates"
        agent: "developer"
        description: "Update Python and JavaScript SDKs with new features"
        deliverables:
          - "python_sdk_updates.py"
          - "javascript_sdk_updates.js"
          - "sdk_documentation.md"
        tools:
          - "update_python_sdk"
          - "update_javascript_sdk"
        dependencies: ["I1", "I2", "I3"]
        estimated_hours: 20
        
    quality_gates:
      - name: "Implementation Review"
        criteria:
          - "Code review completed and approved"
          - "Unit tests passing (85%+ coverage)"
          - "Integration tests successful"
        approvers: ["developer", "atdf_specialist"]
        
  # Phase 4: Testing & Validation
  testing:
    name: "Testing & Quality Assurance"
    duration: "1 week"
    parallel: true
    
    tasks:
      - id: "T1"
        name: "Schema Validation Testing"
        agent: "qa"
        description: "Comprehensive testing of schema validation and compliance"
        deliverables:
          - "validation_test_suite.py"
          - "validation_test_results.json"
          - "compliance_report.md"
        tools:
          - "test_atdf_validation"
          - "run_compliance_tests"
        dependencies: ["I1"]
        estimated_hours: 20
        
      - id: "T2"
        name: "Integration Testing"
        agent: "qa"
        description: "Test integration with external frameworks and systems"
        deliverables:
          - "integration_test_suite.py"
          - "integration_test_results.json"
          - "compatibility_report.md"
        tools:
          - "test_framework_integration"
          - "validate_compatibility"
        dependencies: ["I2"]
        estimated_hours: 24
        
      - id: "T3"
        name: "Performance Testing"
        agent: "qa"
        description: "Performance and load testing of new features"
        deliverables:
          - "performance_test_suite.py"
          - "performance_benchmarks.json"
          - "optimization_recommendations.md"
        tools:
          - "run_performance_tests"
          - "analyze_performance_metrics"
        dependencies: ["I1", "I2", "I3"]
        estimated_hours: 16
        
      - id: "T4"
        name: "Security Testing"
        agent: "qa"
        description: "Security analysis and vulnerability assessment"
        deliverables:
          - "security_test_results.json"
          - "vulnerability_assessment.md"
          - "security_recommendations.md"
        tools:
          - "run_security_tests"
          - "analyze_vulnerabilities"
        dependencies: ["I1", "I2", "I3"]
        estimated_hours: 12
        
    quality_gates:
      - name: "Quality Assurance"
        criteria:
          - "All tests passing (90%+ success rate)"
          - "Performance benchmarks met"
          - "Security vulnerabilities addressed"
          - "Test coverage >= 90%"
        approvers: ["qa", "atdf_specialist"]
        
  # Phase 5: Documentation & Deployment
  deployment:
    name: "Documentation & Deployment"
    duration: "0.5 weeks"
    parallel: true
    
    tasks:
      - id: "DP1"
        name: "Documentation Updates"
        agent: "atdf_specialist"
        description: "Update all documentation with new features and changes"
        deliverables:
          - "updated_specification.md"
          - "migration_guide.md"
          - "api_documentation.md"
          - "examples_and_tutorials.md"
        tools:
          - "update_documentation"
          - "create_migration_guide"
        dependencies: ["T1", "T2", "T3", "T4"]
        estimated_hours: 16
        
      - id: "DP2"
        name: "Release Preparation"
        agent: "pm"
        description: "Prepare release package and deployment artifacts"
        deliverables:
          - "release_notes.md"
          - "deployment_package.zip"
          - "version_update_scripts.sh"
        tools:
          - "prepare_release"
          - "create_deployment_package"
        dependencies: ["DP1"]
        estimated_hours: 8
        
      - id: "DP3"
        name: "Community Communication"
        agent: "pm"
        description: "Communicate changes and updates to the community"
        deliverables:
          - "community_announcement.md"
          - "breaking_changes_notice.md"
          - "upgrade_instructions.md"
        tools:
          - "create_community_announcement"
          - "prepare_upgrade_guide"
        dependencies: ["DP1", "DP2"]
        estimated_hours: 6
        
    quality_gates:
      - name: "Release Readiness"
        criteria:
          - "Documentation complete and accurate"
          - "Release package validated"
          - "Community communication prepared"
          - "Rollback plan documented"
        approvers: ["pm", "atdf_specialist", "qa"]

# Workflow Dependencies
dependencies:
  external:
    - name: "ATDF Schema v2.0"
      type: "schema"
      location: "schema/atdf_schema.json"
    - name: "FastAPI Integration"
      type: "framework"
      location: "examples/fastapi-mcp-server/"
    - name: "Test Infrastructure"
      type: "testing"
      location: "tests/"
      
  internal:
    - name: "BMAD Configuration"
      type: "config"
      location: "bmad.config.yml"
    - name: "Agent Tools"
      type: "tools"
      location: "bmad/tools/"

# Success Metrics
metrics:
  quality:
    - name: "Test Coverage"
      target: "90%"
      current: "85%"
    - name: "Schema Validation Accuracy"
      target: "100%"
      current: "98%"
    - name: "Performance Benchmark"
      target: "<100ms response time"
      current: "85ms"
      
  delivery:
    - name: "On-Time Delivery"
      target: "100%"
    - name: "Budget Adherence"
      target: "Within 10% of estimate"
    - name: "Quality Gates Passed"
      target: "100%"
      
  adoption:
    - name: "Community Feedback Score"
      target: "4.5/5"
    - name: "Migration Success Rate"
      target: "95%"
    - name: "Documentation Completeness"
      target: "100%"

# Risk Management
risks:
  - id: "R1"
    description: "Breaking changes impact existing integrations"
    probability: "medium"
    impact: "high"
    mitigation: "Comprehensive compatibility testing and migration tools"
    owner: "architect"
    
  - id: "R2"
    description: "Performance degradation with new features"
    probability: "low"
    impact: "medium"
    mitigation: "Performance testing and optimization in each phase"
    owner: "qa"
    
  - id: "R3"
    description: "Community resistance to changes"
    probability: "medium"
    impact: "medium"
    mitigation: "Early community engagement and clear communication"
    owner: "pm"

# Communication Plan
communication:
  daily_standups:
    time: "09:00 UTC"
    participants: ["all_agents"]
    format: "async_update"
    
  weekly_reviews:
    time: "Friday 15:00 UTC"
    participants: ["primary_agents", "stakeholders"]
    format: "video_conference"
    
  milestone_reports:
    frequency: "end_of_phase"
    recipients: ["stakeholders", "community"]
    format: "written_report"

# Rollback Plan
rollback:
  triggers:
    - "Critical bugs discovered in production"
    - "Performance degradation > 50%"
    - "Community adoption < 20%"
    
  procedures:
    - "Revert to previous schema version"
    - "Restore previous API endpoints"
    - "Communicate rollback to community"
    - "Analyze failure and plan remediation"
    
  recovery_time: "< 4 hours"
  data_preservation: "100%"

---
# Workflow Execution Instructions

## Getting Started
1. Load this workflow: `*workflow atdf_enhancement`
2. Check agent availability: `*status`
3. Begin planning phase: `*phase planning`

## Phase Execution
- Execute phases sequentially unless marked as parallel
- Complete all quality gates before proceeding
- Monitor progress with `*status detailed`

## Agent Commands
- `*analyst <task>` - Engage analyst for research tasks
- `*architect <task>` - Engage architect for design tasks  
- `*developer <task>` - Engage developer for implementation
- `*qa <task>` - Engage QA for testing tasks
- `*atdf <task>` - Engage ATDF specialist for domain expertise
- `*pm <task>` - Engage PM for coordination tasks

## Quality Gates
Each phase has defined quality gates that must be passed before progression. Use `*quality_gate <phase>` to check status.

## Emergency Procedures
- Pause workflow: `*pause atdf_enhancement`
- Resume workflow: `*resume atdf_enhancement`
- Rollback: `*rollback atdf_enhancement`
- Emergency stop: `*stop atdf_enhancement`