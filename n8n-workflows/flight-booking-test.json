{
  "name": "Flight Booking Test Workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "a1b2c3d4-e5f6-7a8b-9c0d-1e2f3a4b5c6d",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "test-flight-booking",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "b2c3d4e5-f6a7-8b9c-0d1e-2f3a4b5c6d7e",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        460
      ],
      "webhookId": "flight-booking-test"
    },
    {
      "parameters": {
        "url": "http://localhost:8001/tools",
        "options": {}
      },
      "id": "c3d4e5f6-a7b8-9c0d-1e2f-3a4b5c6d7e8f",
      "name": "Get Available Tools",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d4e5f6a7-b8c9-0d1e-2f3a-4b5c6d7e8f9a",
              "leftValue": "={{ $json.length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f6a7b8-c9d0-1e2f-3a4b-5c6d7e8f9a0b",
      "name": "Check Tools Available",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Generate flight booking parameters compatible with the MCP bridge\nconst searchParams = {\n  departure_city: 'Madrid',\n  arrival_city: 'Barcelona',\n  departure_date: '2024-03-20T09:00:00',\n  return_date: '2024-03-25T18:00:00',\n  seat_class: 'economy',\n  passenger_name: 'Jane Smith',\n  email: 'jane.smith@example.com'\n};\n\nreturn {\n  json: searchParams\n};\n"
      },
      "id": "f6a7b8c9-d0e1-2f3a-4b5c-6d7e8f9a0b1c",
      "name": "Prepare Flight Parameters",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8001/mcp",
        "sendBody": true,
        "options": {
          "headers": {
            "Content-Type": "application/json"
          }
        },
        "specifyBody": "json",
        "jsonBody": "{\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"flight_booking\",\n    \"arguments\": {\n      \"passenger_name\": \"{{ $json.passenger_name }}\",\n      \"email\": \"{{ $json.email }}\",\n      \"departure_city\": \"{{ $json.departure_city }}\",\n      \"arrival_city\": \"{{ $json.arrival_city }}\",\n      \"departure_date\": \"{{ $json.departure_date }}\",\n      \"return_date\": \"{{ $json.return_date }}\",\n      \"seat_class\": \"{{ $json.seat_class }}\"\n    }\n  }\n}"
      },
      "id": "a7b8c9d0-e1f2-3a4b-5c6d-7e8f9a0b1c2d",
      "name": "Call Flight Booking Tool",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1120,
        200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process flight booking response from MCP bridge\nconst rpcResponse = $input.all()[0].json;\nconst searchParams = $input.all()[1].json;\nconst content = rpcResponse?.result?.content ?? [];\nconst rawText = content.length ? content[0].text : null;\n\nlet parsed;\ntry {\n  parsed = rawText ? JSON.parse(rawText) : {};\n} catch (error) {\n  parsed = { status: 'failed', parse_error: error.message, raw: rawText };\n}\n\nconst details = parsed.details ?? {};\nconst status = parsed.status ?? 'failed';\n\nconst bookingData = {\n  status,\n  booking_reference: parsed.booking_id ?? 'N/A',\n  flight_number: details.flight_number ?? 'IB1234',\n  departure_city: details.departure_city ?? searchParams.departure_city,\n  arrival_city: details.arrival_city ?? searchParams.arrival_city,\n  departure_date: details.departure_date ?? searchParams.departure_date,\n  return_date: details.return_date ?? searchParams.return_date,\n  passenger_name: searchParams.passenger_name,\n  email: searchParams.email,\n  seat_class: details.seat_class ?? searchParams.seat_class,\n  timestamp: new Date().toISOString(),\n  raw_response: parsed\n};\n\nreturn {\n  json: bookingData\n};\n"
      },
      "id": "b8c9d0e1-f2a3-4b5c-6d7e-8f9a0b1c2d3e",
      "name": "Process Booking Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1340,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "c9d0e1f2-a3b4-5c6d-7e8f-9a0b1c2d3e4f",
              "leftValue": "={{ $json.status }}",
              "rightValue": "confirmed",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d0e1f2a3-b4c5-6d7e-8f9a-0b1c2d3e4f5a",
      "name": "Check Booking Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        200
      ]
    },
    {
      "parameters": {
        "message": "‚úàÔ∏è Flight Booking Confirmed!\n\nüé´ Booking Reference: {{ $json.booking_reference }}\n‚úàÔ∏è Flight: {{ $json.flight_number }}\nüìç Route: {{ $json.origin }} ‚Üí {{ $json.destination }}\nüìÖ Departure: {{ $json.departure_date }}\nüìÖ Return: {{ $json.return_date }}\nüë§ Passenger: {{ $json.passenger_name }}\nüí∫ Class: {{ $json.class }}\nüë• Passengers: {{ $json.passengers }}\nüí∞ Total: {{ $json.total_price }} {{ $json.currency }}\nüí∫ Seats: {{ $json.seat_numbers.join(', ') }}\nüåê Check-in: {{ $json.check_in_url }}",
        "options": {}
      },
      "id": "e1f2a3b4-c5d6-7e8f-9a0b-1c2d3e4f5a6b",
      "name": "Success Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1780,
        120
      ]
    },
    {
      "parameters": {
        "message": "‚ùå Flight Booking Failed!\n\n‚úàÔ∏è Route: {{ $json.origin }} ‚Üí {{ $json.destination }}\nüìÖ Dates: {{ $json.departure_date }} to {{ $json.return_date }}\nüë§ Passenger: {{ $json.passenger_name }}\n\n‚ö†Ô∏è Error Details:\n{{ JSON.stringify($json.raw_response, null, 2) }}",
        "options": {}
      },
      "id": "f2a3b4c5-d6e7-8f9a-0b1c-2d3e4f5a6b7c",
      "name": "Failure Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        1780,
        280
      ]
    },
    {
      "parameters": {
        "message": "‚ö†Ô∏è No ATDF Tools Available!\n\nThe MCP bridge at http://localhost:8001 is not returning any tools.\nPlease check:\n- ATDF server is running on port 8000\n- MCP bridge is running on port 8001\n- Both services are properly connected",
        "options": {}
      },
      "id": "a3b4c5d6-e7f8-9a0b-1c2d-3e4f5a6b7c8d",
      "name": "No Tools Error",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "to": "{{ $json.passenger_email }}",
        "subject": "Flight Booking Confirmation - {{ $json.booking_reference }}",
        "text": "Dear {{ $json.passenger_name }},\n\nYour flight booking has been confirmed!\n\nBooking Details:\n- Booking Reference: {{ $json.booking_reference }}\n- Flight: {{ $json.flight_number }}\n- Route: {{ $json.origin }} ‚Üí {{ $json.destination }}\n- Departure: {{ $json.departure_date }}\n- Return: {{ $json.return_date }}\n- Class: {{ $json.class }}\n- Seats: {{ $json.seat_numbers.join(', ') }}\n- Total: {{ $json.total_price }} {{ $json.currency }}\n\nCheck-in online: {{ $json.check_in_url }}\n\nThank you for choosing our service!\n\nBest regards,\nATDF Travel Services",
        "options": {}
      },
      "id": "b4c5d6e7-f8a9-0b1c-2d3e-4f5a6b7c8d9e",
      "name": "Send Confirmation Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2000,
        120
      ]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Get Available Tools",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Get Available Tools",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Available Tools": {
      "main": [
        [
          {
            "node": "Check Tools Available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Tools Available": {
      "main": [
        [
          {
            "node": "Prepare Flight Parameters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Tools Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Flight Parameters": {
      "main": [
        [
          {
            "node": "Call Flight Booking Tool",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Flight Booking Tool": {
      "main": [
        [
          {
            "node": "Process Booking Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Booking Response": {
      "main": [
        [
          {
            "node": "Check Booking Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Booking Status": {
      "main": [
        [
          {
            "node": "Success Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Failure Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Notification": {
      "main": [
        [
          {
            "node": "Send Confirmation Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "atdf-mcp-integration"
  },
  "id": "flight-booking-test",
  "tags": [
    {
      "createdAt": "2024-01-15T10:00:00.000Z",
      "updatedAt": "2024-01-15T10:00:00.000Z",
      "id": "atdf-test",
      "name": "ATDF Test"
    }
  ]
}
