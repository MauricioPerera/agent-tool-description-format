{
  "name": "Complete Travel Booking via ATDF-MCP (Code v2)",
  "nodes": [
    {
      "parameters": {},
      "id": "start-trigger-001",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            { "name": "traveler_name", "value": "Carlos Mendez" },
            { "name": "email", "value": "carlos.mendez@example.com" },
            { "name": "departure_city", "value": "Madrid" },
            { "name": "arrival_city", "value": "Barcelona" },
            { "name": "travel_date", "value": "2025-12-28T10:00:00" },
            { "name": "check_in", "value": "2025-12-28T15:00:00" },
            { "name": "check_out", "value": "2025-12-30T11:00:00" },
            { "name": "room_type", "value": "suite" }
          ],
          "number": [
            { "name": "guests", "value": 2 }
          ]
        },
        "options": {}
      },
      "id": "set-travel-data-002",
      "name": "Set Travel Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "language": "JavaScript",
        "mode": "runOnceForEachItem",
        "jsCode": "const travel = $node['Set Travel Data'].item.json;\nconst body = {\n  method: 'tools/call',\n  params: {\n    name: 'hotel_reservation',\n    arguments: {\n      guest_name: travel.traveler_name,\n      email: travel.email,\n      check_in: travel.check_in,\n      check_out: travel.check_out,\n      room_type: travel.room_type,\n      guests: travel.guests\n    }\n  }\n};\nconst resp = await this.helpers.httpRequest({ method: 'POST', url: 'http://localhost:8001/mcp', json: true, body });\nreturn { json: { result: resp.result } };"
      },
      "id": "hotel-reservation-003",
      "name": "Book Hotel",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "leftValue": "", "typeValidation": "strict" },
          "conditions": [
            {
              "id": "hotel_success_condition",
              "leftValue": "={{ $json.result.content[0].text }}",
              "rightValue": "confirmed",
              "operator": { "type": "string", "operation": "contains" }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-hotel-status-004",
      "name": "Check Hotel Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "language": "JavaScript",
        "mode": "runOnceForEachItem",
        "jsCode": "const travel = $node['Set Travel Data'].item.json;\nconst body = {\n  method: 'tools/call',\n  params: {\n    name: 'flight_booking',\n    arguments: {\n      passenger_name: travel.traveler_name,\n      email: travel.email,\n      departure_city: travel.departure_city,\n      arrival_city: travel.arrival_city,\n      departure_date: travel.travel_date,\n      seat_class: 'business'\n    }\n  }\n};\nconst resp = await this.helpers.httpRequest({ method: 'POST', url: 'http://localhost:8001/mcp', json: true, body });\nreturn { json: { result: resp.result } };"
      },
      "id": "flight-booking-005",
      "name": "Book Flight",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": { "caseSensitive": true, "leftValue": "", "typeValidation": "strict" },
          "conditions": [
            {
              "id": "flight_success_condition",
              "leftValue": "={{ $json.result.content[0].text }}",
              "rightValue": "confirmed",
              "operator": { "type": "string", "operation": "contains" }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-flight-status-006",
      "name": "Check Flight Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            { "name": "message", "value": "üéâ Complete travel booking successful!" },
            { "name": "hotel_reservation_id", "value": "={{ JSON.parse($('Book Hotel').item.json.result.content[0].text).reservation_id }}" },
            { "name": "flight_booking_id", "value": "={{ JSON.parse($('Book Flight').item.json.result.content[0].text).booking_id }}" },
            { "name": "traveler", "value": "={{ $('Set Travel Data').item.json.traveler_name }}" },
            { "name": "email", "value": "={{ $('Set Travel Data').item.json.email }}" }
          ]
        },
        "options": {}
      },
      "id": "complete-success-007",
      "name": "Complete Success Summary",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1560, 100]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            { "name": "message", "value": "‚ùå Hotel booking failed! Travel booking cancelled." },
            { "name": "error", "value": "={{ $('Book Hotel').item.json.result.content[0].text }}" }
          ]
        },
        "options": {}
      },
      "id": "hotel-error-008",
      "name": "Hotel Error Summary",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1120, 400]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            { "name": "message", "value": "‚ùå Flight booking failed! Hotel booked, but flight failed." },
            { "name": "error", "value": "={{ $('Book Flight').item.json.result.content[0].text }}" }
          ]
        },
        "options": {}
      },
      "id": "flight-error-009",
      "name": "Flight Error Summary",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1560, 300]
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": { "main": [[{ "node": "Set Travel Data", "type": "main", "index": 0 }]] },
    "Set Travel Data": { "main": [[{ "node": "Book Hotel", "type": "main", "index": 0 }]] },
    "Book Hotel": { "main": [[{ "node": "Check Hotel Status", "type": "main", "index": 0 }]] },
    "Check Hotel Status": {
      "main": [
        [{ "node": "Book Flight", "type": "main", "index": 0 }],
        [{ "node": "Hotel Error Summary", "type": "main", "index": 0 }]
      ]
    },
    "Book Flight": { "main": [[{ "node": "Check Flight Status", "type": "main", "index": 0 }]] },
    "Check Flight Status": {
      "main": [
        [{ "node": "Complete Success Summary", "type": "main", "index": 0 }],
        [{ "node": "Flight Error Summary", "type": "main", "index": 0 }]
      ]
    }
  },
  "active": false,
  "settings": { "executionOrder": "v1" },
  "versionId": "1",
  "meta": { "templateCredsSetupCompleted": true, "instanceId": "local" },
  "id": "complete-travel-atdf-mcp-code-v2",
  "tags": [
    { "createdAt": "2025-10-01T07:50:00.000Z", "updatedAt": "2025-10-01T07:50:00.000Z", "id": "atdf-integration", "name": "ATDF Integration" }
  ]
}